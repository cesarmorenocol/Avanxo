//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceLayer.ServiceExternalProvider {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestREF", Namespace="http://schemas.datacontract.org/2004/07/ProviderService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceLayer.ServiceExternalProvider.Request))]
    public partial class RequestREF : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://schemas.datacontract.org/2004/07/ProviderService")]
    [System.SerializableAttribute()]
    public partial class Request : ServiceLayer.ServiceExternalProvider.RequestREF {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpecialGiftQuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardMessage {
            get {
                return this.CardMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CardMessageField, value) != true)) {
                    this.CardMessageField = value;
                    this.RaisePropertyChanged("CardMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecialGiftQuantity {
            get {
                return this.SpecialGiftQuantityField;
            }
            set {
                if ((this.SpecialGiftQuantityField.Equals(value) != true)) {
                    this.SpecialGiftQuantityField = value;
                    this.RaisePropertyChanged("SpecialGiftQuantity");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceExternalProvider.IExternalProvider")]
    public interface IExternalProvider {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExternalProvider/GenerateRequest", ReplyAction="http://tempuri.org/IExternalProvider/GenerateRequestResponse")]
        ServiceLayer.ServiceExternalProvider.RequestREF GenerateRequest(ServiceLayer.ServiceExternalProvider.Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExternalProvider/GenerateRequest", ReplyAction="http://tempuri.org/IExternalProvider/GenerateRequestResponse")]
        System.Threading.Tasks.Task<ServiceLayer.ServiceExternalProvider.RequestREF> GenerateRequestAsync(ServiceLayer.ServiceExternalProvider.Request request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExternalProviderChannel : ServiceLayer.ServiceExternalProvider.IExternalProvider, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExternalProviderClient : System.ServiceModel.ClientBase<ServiceLayer.ServiceExternalProvider.IExternalProvider>, ServiceLayer.ServiceExternalProvider.IExternalProvider {
        
        public ExternalProviderClient() {
        }
        
        public ExternalProviderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExternalProviderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExternalProviderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExternalProviderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceLayer.ServiceExternalProvider.RequestREF GenerateRequest(ServiceLayer.ServiceExternalProvider.Request request) {
            return base.Channel.GenerateRequest(request);
        }
        
        public System.Threading.Tasks.Task<ServiceLayer.ServiceExternalProvider.RequestREF> GenerateRequestAsync(ServiceLayer.ServiceExternalProvider.Request request) {
            return base.Channel.GenerateRequestAsync(request);
        }
    }
}
